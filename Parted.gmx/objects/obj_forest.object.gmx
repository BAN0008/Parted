<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_solid</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*randomize();
var enemycount_count = (sprite_width * sprite_height) / (512 * 512);
enemy = choose(obj_slimesmall1, obj_bandit1);
if (creaturelevelmodifier &gt; 5)
{
global.creaturelevel = global.playerlevel + irandom_range(1,10)
}
else if (creaturelevelmodifier &lt;= 5) &amp;&amp; global.playerlevel &gt; creaturelevelmodifier
{
global.creaturelevel = global.playerlevel - creaturelevelmodifier
}
randomize();

for (i = 0; i &lt; enemycount; i++)
{
    spawn_x = irandom_range(bbox_left, bbox_right);
    spawn_y = irandom_range(bbox_top, bbox_bottom);
    while (collision_rectangle(spawn_x - (sprite_get_width(spr_slimesmall) / 2), spawn_y - (sprite_get_height(spr_slimesmall) / 2), spawn_x + (sprite_get_width(spr_slimesmall) / 2), spawn_y + (sprite_get_height(spr_slimesmall) / 2), obj_solid, 1, 1))
    {
        spawn_x = irandom_range(bbox_left, bbox_right);
        spawn_y = irandom_range(bbox_top, bbox_bottom);
    }
    instance_create(spawn_x, spawn_y, enemy);
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if enemyamount &gt; 0
{
    spawnx = random_range(bbox_left,bbox_right);
    spawny = random_range(bbox_top,bbox_bottom);
    if !instance_position(spawnx,spawny,obj_solid)
    {
        instance_create(random_range(bbox_left,bbox_right), random_range(bbox_top,bbox_bottom), enemy);
        enemyamount --;
        show_debug_message(enemyamount)
    }
    else if (instance_position(spawnx,spawny,obj_solid))
    {
        spawnx = random_range(bbox_left,bbox_right); 
        spawny = random_range(bbox_top,bbox_bottom);
    }
}  
else 
{
exit;
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
