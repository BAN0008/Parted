<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_character</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialise Variables
hsp = 0;
vsp = 0;
dodge_cooldown = 0;
normal_speed = 1.35; //Speed that player moves
dodge_max_cooldown = 1; //Cooldown for dodging in seconds
dodge_multiplier = 15; //Multiplier for move velocity while dodging
splash = true;  //Allows the splash animation to appear
splash_sound = true;    //Allows the splash sound to play
sploosh_sound = true;    //Allows the water_walk sound to play
vhealth = 5;

audio_play_sound(snd_ambient_swamp,5,true); /*Plays the ambient swamp sound
(Will make it play ambient sounds according to the enviroment) */

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>splash = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
var current_speed = normal_speed;

if (dodge_cooldown &gt; 0)
{
    dodge_cooldown--;
}
else
{
    if (keyboard_check(vk_shift))
    {
        dodge_cooldown = room_speed * dodge_max_cooldown;
        current_speed *= dodge_multiplier;
    }
}

if (keyboard_check(ord('W'))) vsp += -current_speed;
if (keyboard_check(ord('S'))) vsp +=  current_speed;
if (keyboard_check(ord('D'))) hsp +=  current_speed;
if (keyboard_check(ord('A'))) hsp += -current_speed;

for (i = 0; i &lt; abs(hsp); i++)
{
    //Check for collision
    if (true)
    {
        x += sign(hsp);
    }
    else
    {
        hsp = 0;
        break;
    }
}

for (i = 0; i &lt; abs(vsp); i++)
{
    //Check for collision
    if (true)
    {
        y += sign(vsp);
    }
    else
    {
        vsp = 0;
        break;
    }
}

hsp = hsp * 0.85;
vsp = vsp * 0.85;

if (hsp &lt; 1 &amp;&amp; hsp &gt; -1) hsp = 0;
if (vsp &lt; 1 &amp;&amp; vsp &gt; -1) vsp = 0;
    //sprite direction
    image_angle = point_direction(x, y, mouse_x, mouse_y);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Interact

if (keyboard_check(ord('E'))) {
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Misc
if(splash_sound = false and !place_meeting(x,y,obj_water))
{
    splash_sound = true;
}

if vhealth &lt; 1 {
    room_restart();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_water">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(splash = true and (hsp != 0 or vsp != 0))
{
    instance_create(x,y,obj_splash);
    instance_create(x,y,obj_ripple);
    splash = false;
    alarm[11] = 5;
    sploosh_sound = choose(true,false);
    
    if(sploosh_sound = true)
    {
        audio_play_sound(choose(snd_waterwalk1,snd_waterwalk2,snd_waterwalk3,snd_waterwalk4,snd_waterwalk5,snd_waterwalk6,snd_waterwalk7,snd_waterwalk8,snd_waterwalk9,snd_waterwalk10),10,false);
    }
}

if(splash_sound = true)
{
    audio_play_sound(snd_splash1,30,false);
    splash_sound = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.attack_cooldown == 0)
{
    vhealth -= other.dmg;
    attack_cooldown = room_speed;
    hsp += other.hsp;
    vsp += other.vsp;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !(instance_exists(obj_steel_shortsword)) {
instance_create(x, y, obj_steel_shortsword);
sprite_index = spr_playerattacking;
audio_play_sound(snd_swing,30,false);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
